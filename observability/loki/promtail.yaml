apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail
rules:
  - apiGroups: [""]
    resources: ["nodes", "nodes/proxy", "services", "endpoints", "pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["discovery.k8s.io"]
    resources: ["endpointslices"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promtail
subjects:
  - kind: ServiceAccount
    name: promtail
    namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
  namespace: default
data:
  promtail.yaml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0

    positions:
      filename: /run/promtail/positions.yaml

    clients:
      - url: http://loki:3100/loki/api/v1/push

    scrape_configs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        pipeline_stages:
          - cri: {}
        relabel_configs:
          - action: replace
            source_labels: ["__meta_kubernetes_namespace"]
            target_label: "namespace"
          - action: replace
            source_labels: ["__meta_kubernetes_pod_name"]
            target_label: "pod"
          - action: replace
            source_labels: ["__meta_kubernetes_pod_container_name"]
            target_label: "container"
          - action: replace
            source_labels: ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
            target_label: "app"
          - action: replace
            source_labels: ["__meta_kubernetes_pod_label_app"]
            target_label: "app"
          - action: replace
            source_labels: ["__meta_kubernetes_node_name"]
            target_label: "node"
          - action: replace
            replacement: "/var/log/pods/*$1/$2/*.log"
            separator: "/"
            source_labels: ["__meta_kubernetes_pod_uid", "__meta_kubernetes_pod_container_name"]
            target_label: "__path__"
      - job_name: varlog-containers
        pipeline_stages:
          - cri: {}
          - regex:
              source: filename
              expression: '^/var/log/pods/(?P<namespace>[^_]+)_(?P<pod>[^_]+)_[^/]+/(?P<container>[^/]+)/[0-9]+\.log$'
          - labels:
              namespace:
              pod:
              container:
        static_configs:
          - targets: ["localhost"]
            labels:
              job: varlogs
              __path__: /var/log/pods/*/*/*.log
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
  namespace: default
  labels:
    app: promtail
spec:
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      serviceAccountName: promtail
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: promtail
          image: grafana/promtail:2.9.6
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/promtail/promtail.yaml
            - -log.level=debug
          volumeMounts:
            - name: promtail-config
              mountPath: /etc/promtail
            - name: varlog
              mountPath: /var/log
            - name: dockercontainers
              mountPath: /var/lib/docker/containers
            - name: positions
              mountPath: /run/promtail
      volumes:
        - name: promtail-config
          configMap:
            name: promtail-config
            items:
              - key: promtail.yaml
                path: promtail.yaml
        - name: varlog
          hostPath:
            path: /var/log
        - name: dockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: positions
          emptyDir: {}
