apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-queries-config
  namespace: default
data:
  postgres-queries.yaml: |
    pg_postmaster_cpu_stats:
      master: true
      cache_seconds: 30
      query: |
        SELECT
          datname as database,
          usename as user,
          application_name,
          state,
          COUNT(*) as connections,
          EXTRACT(EPOCH FROM MAX(now() - backend_start)) as max_connection_age_seconds,
          EXTRACT(EPOCH FROM AVG(now() - backend_start)) as avg_connection_age_seconds
        FROM pg_stat_activity
        WHERE state IS NOT NULL
        GROUP BY datname, usename, application_name, state
      metrics:
        - database:
            usage: "LABEL"
            description: "Database name"
        - user:
            usage: "LABEL"
            description: "User name"
        - application_name:
            usage: "LABEL"
            description: "Application name"
        - state:
            usage: "LABEL"
            description: "Connection state"
        - connections:
            usage: "GAUGE"
            description: "Number of connections"
        - max_connection_age_seconds:
            usage: "GAUGE"
            description: "Maximum connection age in seconds"
        - avg_connection_age_seconds:
            usage: "GAUGE"
            description: "Average connection age in seconds"

    pg_database_stats:
      master: true
      cache_seconds: 60
      query: |
        SELECT
          datname as database,
          numbackends as connections,
          xact_commit as commits,
          xact_rollback as rollbacks,
          blks_read as blocks_read,
          blks_hit as blocks_hit,
          tup_returned as tuples_returned,
          tup_fetched as tuples_fetched,
          tup_inserted as tuples_inserted,
          tup_updated as tuples_updated,
          tup_deleted as tuples_deleted
        FROM pg_stat_database
        WHERE datname NOT IN ('template0', 'template1')
      metrics:
        - database:
            usage: "LABEL"
            description: "Database name"
        - connections:
            usage: "GAUGE"
            description: "Number of backends currently connected to this database"
        - commits:
            usage: "COUNTER"
            description: "Number of transactions committed"
        - rollbacks:
            usage: "COUNTER"
            description: "Number of transactions rolled back"
        - blocks_read:
            usage: "COUNTER"
            description: "Number of disk blocks read"
        - blocks_hit:
            usage: "COUNTER"
            description: "Number of buffer hits"
        - tuples_returned:
            usage: "COUNTER"
            description: "Number of rows returned by queries"
        - tuples_fetched:
            usage: "COUNTER"
            description: "Number of rows fetched by queries"
        - tuples_inserted:
            usage: "COUNTER"
            description: "Number of rows inserted"
        - tuples_updated:
            usage: "COUNTER"
            description: "Number of rows updated"
        - tuples_deleted:
            usage: "COUNTER"
            description: "Number of rows deleted"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-exporter
  namespace: default
  labels:
    app: postgres-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-exporter
  template:
    metadata:
      labels:
        app: postgres-exporter
    spec:
      containers:
      - name: postgres-exporter
        image: prometheuscommunity/postgres-exporter:v0.15.0
        ports:
        - containerPort: 9187
          name: metrics
        env:
        - name: DATA_SOURCE_NAME
          value: "postgresql://postgres:5mt1gDF2B6cNmsrjygTZVz@postgres:5432/postgres?sslmode=disable"
        - name: PG_EXPORTER_EXTEND_QUERY_PATH
          value: "/etc/queries/postgres-queries.yaml"
        volumeMounts:
        - name: queries-config
          mountPath: /etc/queries
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9187
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /metrics
            port: 9187
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: queries-config
        configMap:
          name: postgres-queries-config
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-exporter
  namespace: default
  labels:
    app: postgres-exporter
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9187"
    prometheus.io/path: "/metrics"
spec:
  type: NodePort
  ports:
  - port: 9187
    targetPort: 9187
    nodePort: 30187
    protocol: TCP
    name: metrics
  selector:
    app: postgres-exporter